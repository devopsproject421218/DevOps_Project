pipeline {
   agent any
    environment {
        AWS_ACCOUNT_ID="945543648876"
        AWS_DEFAULT_REGION="us-west-2" 
        IMAGE_REPO_NAME="my-python-app"
        IMAGE_TAG="latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }
 
 stages {
      stage('Logging into AWS ECR') {
            steps {
                script {
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
            }
        }       
      stage('Docker Build and Tag') {
           steps {
                dir('PythonApp') {
                sh 'whoami'
                sh 'docker build -t my-python-app:latest .'               
                }
           }    
        }

    // Uploading Docker images into AWS ECR
      stage('Pushing to ECR') {
           steps{  
               script {
                sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"
                sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                }
            }
        }
     
    //  stage('Run Docker container on Jenkins Agent') {
             
    //        steps {
    //            sh "docker run -d -p 8000:5000 -it my-python-app:latest"
    //        }
    //    }

      stage ('Docker compose for monitoring') {
        steps {
                dir ('PythonApp') {
                sh "docker-compose build"
                sh "docker-compose up -d"
                }  
        }
      }  
    }

    post {
        always {
            emailext body: 'A Test EMail', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
        }
    }
}
